import React, { useContext, useMemo } from "react";
import {
  Avatar,
  Box,
  Button,
  Container,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Stack,
  Typography,
} from "@mui/material";
import CheckCircleOutlineIcon from "@mui/icons-material/CheckCircleOutline";
import RadioButtonUncheckedIcon from "@mui/icons-material/RadioButtonUnchecked";
import { useNavigate } from "react-router-dom";
import { AuthContext } from "../../../contexts/AuthContext";

const Welcome = () => {
  const { user } = useContext(AuthContext);
  const navigate = useNavigate();

  const missing = useMemo(
    () => ({
      avatar: !user?.avatar,
      bio: !user?.bio,
      website: !user?.website,
    }),
    [user]
  );

  const isComplete = useMemo(
    () => Object.values(missing).every((v) => !v),
    [missing]
  );

  return (
    <Container maxWidth="sm" sx={{ py: 6 }}>
      <Box sx={{ textAlign: "center" }}>
        <Avatar
          src={user?.avatar ? `http://localhost:3000${user.avatar}` : "/default-avatar.jpg"}
          sx={{ width: 96, height: 96, mx: "auto", mb: 2 }}
        />
        <Typography variant="h5" fontWeight={700} gutterBottom>
          –ü—Ä–∏–≤–µ—Ç, {user?.username || "–¥—Ä—É–≥"}! üëã
        </Typography>
        <Typography color="text.secondary" sx={{ mb: 3 }}>
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VibeGram. –î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã –¥—Ä—É–∑—å—è –ª–µ–≥–∫–æ —Ç–µ–±—è –Ω–∞—Ö–æ–¥–∏–ª–∏.
        </Typography>

        <List>
          {[
            { key: "avatar", label: "–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä" },
            { key: "bio", label: "–î–æ–±–∞–≤–∏—Ç—å ¬´About¬ª" },
            { key: "website", label: "–£–∫–∞–∑–∞—Ç—å —Å–∞–π—Ç (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" },
          ].map((item) => (
            <ListItem key={item.key} disableGutters>
              <ListItemIcon sx={{ minWidth: 36 }}>
                {missing[item.key] ? (
                  <RadioButtonUncheckedIcon />
                ) : (
                  <CheckCircleOutlineIcon />
                )}
              </ListItemIcon>
              <ListItemText primary={item.label} />
            </ListItem>
          ))}
        </List>

        <Stack direction="row" spacing={2} justifyContent="center" sx={{ mt: 3 }}>
          {!isComplete && (
            <Button
              variant="contained"
              onClick={() =>
                navigate(
                  "/account/edit" // ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Ç–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ EditProfile
                )
              }
            >
              –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </Button>
          )}
          <Button variant="text" onClick={() => navigate("/")}>
            {isComplete ? "–ù–∞ –≥–ª–∞–≤–Ω—É—é" : "–ü–æ–∑–∂–µ"}
          </Button>
        </Stack>
      </Box>
    </Container>
  );
};

export default Welcome;
